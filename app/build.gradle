plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.guilin.aj"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'

    // appcompat依赖了androidx.fragment，
    // 而androidx.fragment下依赖了ViewModel和LiveData，
    // LiveData又依赖了Lifecycle；
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2-native-mt'


    def lifecycle_version = '2.3.1'

//    // ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"

//    // LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

//    // 只有Lifecycles (不带 ViewModel or LiveData)
//    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

//    // Saved state module for ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

//    // lifecycle注解处理器
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

//    // 替换 - 如果使用Java8,就用这个替换上面的lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

//    //以下按需引入
//    // 可选 - 帮助实现Service的LifecycleOwner
//    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

//    // 可选 - ProcessLifecycleOwner给整个 app进程 提供一个lifecycle
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

//    // 可选 - ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

//    // 可选 - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:lifecycle_version"
}